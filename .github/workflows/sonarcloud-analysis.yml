name: "SonarCloud C++ Analysis (The Definitive Manual Way)"

on:
  workflow_dispatch:

jobs:
  analysis:
    name: Analysis
    runs-on: ubuntu-latest

    steps:
    # 步骤1: 检出你指定的旧代码
    - name: Checkout target source code
      uses: actions/checkout@v4
      with:
        ref: '50eed9b008e7eff012e788a8a328901f68373579'
        fetch-depth: 0

    # 步骤2: 安装所有编译依赖
    - name: Install all dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libssl-dev protobuf-compiler libgflags-dev libleveldb-dev libprotobuf-dev libprotoc-dev unzip

    # ========================== 最终核心修改点 ==========================
    # 步骤3: 手动下载并准备所有SonarCloud工具
    - name: Download and Prepare SonarCloud Tools
      run: |
        # 下载 build-wrapper 并解压
        curl -fSL -o build-wrapper.zip "https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip"
        unzip -o build-wrapper.zip
        
        # 下载 sonar-scanner 并解压
        curl -fSL -o sonar-scanner.zip "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip"
        unzip -o sonar-scanner.zip
        
        # 增加一个调试步骤，确认文件都已就位
        echo "--- Listing current directory ---"
        ls -l

    # 步骤4: 使用build-wrapper的绝对路径来运行编译
    - name: Build with build-wrapper
      run: |
        # 使用当前目录下的build-wrapper的绝对路径
        ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output cmake .
        ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make -j2
      
    # 步骤5: 使用sonar-scanner的绝对路径来运行分析
    - name: Analyze with SonarScanner
      env:
        # GITHUB_TOKEN是GitHub自动提供的
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # SONAR_TOKEN是你之前在仓库里设置的那个secret
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        # 找到sonar-scanner的目录名 (例如 sonar-scanner-5.0.1.3006-linux)
        SCANNER_DIR=$(find . -maxdepth 1 -type d -name "sonar-scanner-*-linux" | head -n 1)
        
        # 使用sonar-scanner的绝对路径
        $SCANNER_DIR/bin/sonar-scanner \
          -Dsonar.organization=zhang-weibing \
          -Dsonar.projectKey=zhang-weibing_brpc \
          -Dsonar.cfamily.build-wrapper-output=bw-output
    # ====================================================================
