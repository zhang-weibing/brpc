# 文件路径: .github/workflows/sonarcloud-analysis.yml
# 最终方案 - 使用SonarCloud进行云端分析 (已更新Action版本)

name: SonarCloud C++ Analysis

on:
  # 允许我们手动从GitHub的Actions页面触发这个工作流
  workflow_dispatch:

jobs:
  analysis:
    # 使用一个标准的Ubuntu虚拟机
    runs-on: ubuntu-latest

    steps:
      # 步骤1: 检出你指定的commit版本的代码
      - name: Checkout target source code
        uses: actions/checkout@v4
        with:
          ref: '50eed9b008e7eff012e788a8a328901f68373579'
          fetch-depth: 0 # SonarCloud需要完整的git历史

      # 步骤2: 安装所有我们已知的编译依赖
      - name: Install all dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libssl-dev protobuf-compiler libgflags-dev libleveldb-dev libprotobuf-dev libprotoc-dev

      # ========================== 核心修改点 ==========================
      # 步骤3: 设置SonarCloud的扫描器工具 
      - name: Set up SonarCloud scanner
        uses: SonarSource/sonar-scanner-cli-action@v2
      # ==============================================================
            
      # 步骤4: 构建项目并进行分析
      - name: Build project and run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: |
          # 1. 使用build-wrapper“包裹”住你的编译命令
          build-wrapper-linux-x86-64 --out-dir bw-output cmake .
          build-wrapper-linux-x86-64 --out-dir bw-output make -j2

          # 2. 运行sonar-scanner进行分析
          # !!! 重要：请确保将下面的KEY替换成你自己的真实值 !!!
          sonar-scanner \
            -Dsonar.projectKey=你的项目KEY \
            -Dsonar.organization=你的组织KEY \
            -Dsonar.cfamily.build-wrapper-output=bw-output
